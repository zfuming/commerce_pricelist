<?php

/**
 * @file
 * Contains commerce_pricelist.module..
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function commerce_pricelist_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the commerce_pricelist module.
    case 'help.page.commerce_pricelist':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Set product prices through price lists') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function commerce_pricelist_theme() {
  $theme = [];
  $theme['price_list'] = [
    'render element' => 'elements',
    'file' => 'price_list.page.inc',
    'template' => 'price_list',
  ];
  $theme['price_list_content_add_list'] = [
    'render element' => 'content',
    'variables' => ['content' => NULL],
    'file' => 'price_list.page.inc',
  ];
  $theme['price_list_item'] = array(
    'render element' => 'elements',
    'file' => 'price_list_item.page.inc',
    'template' => 'price_list_item',
  );
  return $theme;
}

function commerce_pricelist_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  if ( $form_id == 'commerce_product_variation_default_edit_form'
    || $form_id == 'commerce_product_variation_default_add_form'
    || $form_id == 'commerce_product_bundle_default_edit_form'
    || $form_id == 'commerce_product_bundle_default_add_form'
    || $form_id == 'commerce_product_default_edit_form'
    || $form_id == 'commerce_product_default_add_form'
  ) {
    $form['actions']['submit']['#submit'][] = 'update_price_list_item';
  }
}

function update_price_list_item(array $form, \Drupal\Core\Form\FormStateInterface $form_state) {
  $entity = $form_state->getFormObject()->getEntity();
  $entityId = $entity->id();
  $entity_type_id = $entity->getEntityType()->id();
  if ($entity_type_id == 'commerce_product_variation'
    || $entity_type_id == 'commerce_product_bundle') {
    foreach ($entity->field_price_list_item as $item) {
      $itemEntity = $item->get('entity')->getTarget()->getValue();
      $itemEntity->setPurchasedEntityId($entityId);
      if (!$itemEntity->getName()) {
        $itemEntity->setName($entity->getTitle());
      }
      if (!$itemEntity->getPrice()) {
        $itemEntity->setPrice($entity->getPrice());
      }
      $itemEntity->save();
    }
  } elseif ($entity_type_id == 'commerce_product') {
    foreach ($entity->variations as $variation) {
      $productVariation = $variation->get('entity')->getTarget()->getValue();
      foreach ($productVariation->field_price_list_item as $item) {
        $itemEntity = $item->get('entity')->getTarget()->getValue();
        $itemEntity->setPurchasedEntityId($entityId);
        if (!$itemEntity->getName() && $productVariation->getTitle()) {
          $itemEntity->setName($productVariation->getTitle());
        }
        if (!$itemEntity->getPrice() && $productVariation->getPrice()) {
          $itemEntity->setPrice($productVariation->getPrice());
        }
        $itemEntity->save();
      }
    }
  }
}

/**
 * Implements hook_theme_suggestions_HOOK().
 */
function commerce_pricelist_theme_suggestions_price_list(array $variables) {
  $suggestions = array();
  $entity = $variables['elements']['#price_list'];
  $sanitized_view_mode = strtr($variables['elements']['#view_mode'], '.', '_');

  $suggestions[] = 'price_list__' . $sanitized_view_mode;
  $suggestions[] = 'price_list__' . $entity->bundle();
  $suggestions[] = 'price_list__' . $entity->bundle() . '__' . $sanitized_view_mode;
  $suggestions[] = 'price_list__' . $entity->id();
  $suggestions[] = 'price_list__' . $entity->id() . '__' . $sanitized_view_mode;
  return $suggestions;
}
